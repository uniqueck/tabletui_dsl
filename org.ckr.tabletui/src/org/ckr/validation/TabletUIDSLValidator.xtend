/*
 * generated by Xtext
 */
package org.ckr.validation

import org.ckr.tabletUIDSL.Button
import org.ckr.tabletUIDSL.Gridster
import org.ckr.tabletUIDSL.Page
import org.ckr.tabletUIDSL.TabletUI
import org.ckr.tabletUIDSL.TabletUIDSLPackage
import org.eclipse.xtext.validation.Check

//import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class TabletUIDSLValidator extends AbstractTabletUIDSLValidator {

//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

	@Check
	def checkUniquePageIds(Page page) {
		for (Page eachPage : (page.eContainer as TabletUI).elements.filter(Page)) {
			if (!page.equals(eachPage) && page.name.equals(eachPage.name)) {
				error("Name der Page muss unique sein", TabletUIDSLPackage.Literals.PAGE__NAME);
			}
		}
	}
	
	
	@Check
	def checkGridsterPositionsInRange(Page page) {
		var maxRows =  (page.eContainer as TabletUI).settings.rows +1
		var maxColumns =  (page.eContainer as TabletUI).settings.columns +1;
		for (gridster : page.elements) {
			var rowSpan = gridster.rowspan;
			if (rowSpan == 0) {
				rowSpan = 1;
			}
			var colSpan = gridster.colspan;
			if (colSpan == 0) {
				colSpan = 1;
			}
			if (gridster.row > (maxRows - 1)) {
				error("Anzahl der Zeilen (rows) ragt 端ber die maximalen Zeilen hinaus.", gridster, TabletUIDSLPackage.Literals.GRIDSTER__ROW);
			}
			if (gridster.row + rowSpan > maxRows) {
				error("Effektive Anzahl der Zeilen (rows) ragt 端ber die maximalen Zeilen hinaus.", gridster, TabletUIDSLPackage.Literals.GRIDSTER__ROWSPAN);
			}	
			if (gridster.column > (maxColumns - 1)) {
				error("Anzahl der Spalten (columns) ragt 端ber die maximalen Spalten hinaus.", gridster, TabletUIDSLPackage.Literals.GRIDSTER__COLUMN);
			}
			if (gridster.column + colSpan > maxColumns) {
				error("Effektive Anzahl der Spalten (columns) ragt 端ber die maximalen Spalten hinaus.", gridster, TabletUIDSLPackage.Literals.GRIDSTER__COLSPAN);
			}	
		}
	}
	

	public static val INVALID_BUTTON_URL = 'invalid_Button_Url'
	
	@Check
	def checkButtonTargetURL(Button button) {
		if ((((button.eContainer as Gridster).eContainer as Page).eContainer as TabletUI).elements.filter(Page).filter[name == button.id].length == 0) {
			warning("Zieladresse "+ button.id + ".html existiert nicht.",button, TabletUIDSLPackage.Literals.BUTTON__ID, INVALID_BUTTON_URL);	
		}		
	}
	

}
