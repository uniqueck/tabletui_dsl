/*
 * generated by Xtext
 */
package org.ckr.generator

import javax.inject.Inject
import org.ckr.tabletUIDSL.Button
import org.ckr.tabletUIDSL.Calview
import org.ckr.tabletUIDSL.Custom
import org.ckr.tabletUIDSL.Div
import org.ckr.tabletUIDSL.Gridster
import org.ckr.tabletUIDSL.Label
import org.ckr.tabletUIDSL.Page
import org.ckr.tabletUIDSL.SimpleChart
import org.ckr.tabletUIDSL.SimpleClock
import org.ckr.tabletUIDSL.Symbol
import org.ckr.tabletUIDSL.TabletUI
import org.ckr.tabletUIDSL.Widget
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.emf.ecore.util.Switch
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.naming.IQualifiedNameProvider

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class TabletUIDSLGenerator implements IGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		generateHtml(resource, fsa);
	}

	@Inject extension IQualifiedNameProvider;

	def generateHtml(Resource resource, IFileSystemAccess fsa) {
		for (e : resource.allContents.toIterable.filter(typeof(Page))) {
			fsa.generateFile(e.fullyQualifiedName.toString("/") + ".html", e.compile)
		}
	}

	def compile(
		Page page
	) '''
		<!DOCTYPE html>
		<html>
			<head>
				<title>«(page.eContainer as TabletUI).settings.title»</title>
				<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
				<meta name="widget_base_width" content="«(page.eContainer as TabletUI).settings.width / (page.eContainer as TabletUI).settings.columns»">
				<meta name="widget_base_height" content="«(page.eContainer as TabletUI).settings.height / (page.eContainer as TabletUI).settings.rows»">
				<meta name="mobile-web-app-capable" content="yes">
				<meta name="apple-mobile-web-app-capable" content="yes">
				<meta http-equiv="X-UA-Compatible" content="IE=edge">
				<meta name="longpoll" content="1">
				«IF ((page.eContainer as TabletUI).settings.fhemweb_url != null && !(page.eContainer as TabletUI).settings.fhemweb_url.equals(""))»
					<meta name="fhemweb_url" content="«(page.eContainer as TabletUI).settings.fhemweb_url»">
				«ENDIF»
				«IF ((page.eContainer as TabletUI).settings.dragdrop == 'false')»
					<meta name='gridster_disable' content='1'>
				«ENDIF»
				«IF ((page.eContainer as TabletUI).settings.debug == 'true')»
					<meta name='debug' content='1' />
				«ENDIF»
				<link rel="stylesheet" href="./lib/jquery.gridster.min.css">
				<link rel="stylesheet" href="./css/fhem-tablet-ui.css">
				<link rel="stylesheet" href="./css/wopr.css">
				<link rel="stylesheet" href="./css/style.css">
				<link rel="stylesheet" href="./css/own.css">
				<link rel="stylesheet" href="./lib/font-awesome.min.css">
				<link rel="stylesheet" href="./lib/jquery.toast.min.css">
				<link rel="stylesheet" href="./lib/powerange.min.css">
				<link rel="stylesheet" href="./lib/openautomation.css">
				
				<script type="text/javascript" src="./js/jquery.min.js"></script>
				      <script type="text/javascript" src="./lib/jquery.knob.mod.min.js"></script>
				<script type="text/javascript" src="./lib/jquery.toast.min.js"></script>
				<script type="text/javascript" src="./lib/jquery.circlemenu.js"></script>
				<script type="text/javascript" src="./lib/powerange.min.js"></script>
				<script type="text/javascript" src="./lib/jquery.gridster.min.js"></script>
				      <script type="text/javascript" src="./lib/fa-multi-button.min.js"></script>
				<script type="text/javascript" src="./js/widget_calview.js"></script>	
				<script type="text/javascript" src="./js/fhem-tablet-ui.js"></script>
				
				<script type="text/javascript" src="./js/cordova-2.3.0.js"></script>
				
			</head>
			<body>
			<div class="gridster">
				<ul>
				«FOR g : page.elements»
					«g.compile»
				«ENDFOR»
				</ul>
			</div>
			</body>			
		</html>
	'''

	def compile(
		Gridster gridster
	) '''
		<li data-row="«gridster.row»" data-col="«gridster.column»" data-sizex="«IF gridster.colspan == 0»1«ELSE»«gridster.colspan»«ENDIF»" data-sizey="«IF (gridster.rowspan == 0)»1«ELSE»«gridster.rowspan»«ENDIF»" class="gs-w">
			«IF gridster.header != null && !gridster.header.equals("")»
				<header>«gridster.header»</header>
			«ENDIF»
			«FOR w : gridster.widgets»
				«w.compile»
			«ENDFOR»
		</li> 
	'''
	

	def compile(Widget widget) '''
		«IF widget instanceof Button»
			«(widget as Button).compile»
		«ELSEIF widget instanceof SimpleClock»
			«(widget as SimpleClock).compile»
			«ELSEIF widget instanceof Symbol»
			«(widget as Symbol).compile»
		«ELSEIF widget instanceof Calview»
			«(widget as Calview).compile»
			«ELSEIF widget instanceof SimpleChart»
			«(widget as SimpleChart).compile»
		«ELSEIF widget 	instanceof Div»
			«(widget as Div).compile»
		«ELSEIF widget instanceof Custom»
		«(widget as Custom).compile»
		«ELSEIF widget instanceof Label»
		«(widget as Label).compile»	
		«ELSEIF widget instanceof org.ckr.tabletUIDSL.Switch»
		«(widget as org.ckr.tabletUIDSL.Switch).compile»	
		«ENDIF»		
	'''

	def compile(SimpleClock simpleClock) '''
		<div data-type="simpleClock"
		data-date-format="«simpleClock.dateFormat»" data-time-format="«simpleClock.timeFormat»"
		«IF simpleClock.class_ != null»
			class="«simpleClock.class_»"
		«ENDIF»
		«IF simpleClock.style != null»
			style="«simpleClock.style»"
		«ENDIF»
		«IF simpleClock.dateColor != null»
			data-date-color="«simpleClock.dateColor.rgb»"
		«ENDIF»
		«IF simpleClock.timeColor != null»
			data-time-color="«simpleClock.timeColor.rgb»"
		«ENDIF»
		«IF simpleClock.bgColors.length == 2»
			data-time-bg-colors='["«simpleClock.bgColors.get(0).rgb»","«simpleClock.bgColors.get(1).rgb»"]'
		«ENDIF»
		>
		</div>
	'''

	def compile(Label label) '''
		<div data-type="label" class="«label.class_»" data-device="«label.device»" data-get="«label.get»">
		</div>
	'''

	def compile(Button button) '''
		<div  
			class="«button.class_»" 
			«IF button.backgroundColor != null»data-on-background-color="«button.backgroundColor.rgb»"«ENDIF» 
			«IF button.color != null»data-color="«button.color.rgb»"«ENDIF» 
			data-icon="«button.icon»" 
			data-type="button" 
			«IF button.url != null»
				data-url="«(button.url as Page).name».html"
			«ENDIF»
			>
		</div>
	'''

	def compile(Symbol s) '''
		<div data-device="«s.device»" data-type="symbol"
			data-get="«s.get»" 
			«IF s.bgicon != null»
				data-background-icon="«s.bgicon»"
			«ENDIF»
			«IF s.class_ != null»
				class="«s.class_»"
			«ENDIF»
			«IF s.getOn.length == 1»
				data-get-on="«s.getOn.get(0)»"
			«ELSEIF s.getOn.length > 1»
				data-get-on='["«s.getOn.get(0)»"«FOR getOn : s.getOn.subList(1,s.getOn.length)»,"«getOn»"«ENDFOR»]'
			«ENDIF»
			«IF s.onColor != null»
				data-on-color="«s.onColor.rgb»"
			«ELSEIF s.onColors.length > 1»
				data-on-colors='["«s.onColors.get(0).rgb»"«FOR color : s.onColors.subList(1, s.onColors.length)»,"«color.rgb»"«ENDFOR»]'				
			«ENDIF»
			«IF s.onBackGroundColor != null»
				data-on-background-color="«s.onBackGroundColor.rgb»"		
			«ENDIF»
			«IF s.icons.length > 1»
				data-icons='["«s.icons.get(0)»"«FOR icon : s.icons.subList(1, s.icons.length)»,"«icon»"«ENDFOR»]'
			«ELSE»
				data-icon="«s.icons.get(0)»"
			«ENDIF»></div>
	'''

	def compile(
		Calview c
	) '''
		<div data-device="«c.device»" data-type="calview"
			data-get="«c.get»" data-max="«c.max»" 
			«IF c.allFC != null»data-all-forecast-color="«c.allFC.rgb»"«ENDIF»
			«IF c.allTC != null»data-all-today-color="«c.allTC.rgb»"«ENDIF»
			«IF c.class != null»class="«c.class_»"«ENDIF»></div>
	'''

	def compile(
		SimpleChart s
	) '''
		<div data-type="simplechart"
			 data-device="«s.device»" data-logdevice="«s.log_device»" data-logfile="«s.logfile»" data-columnspec="«s.columnSpec»" 
			 data-minvalue="«s.min»" 
			 data-maxvalue="«s.max»" 
			 data-yticks="«s.YTicks»" 
			 data-xticks="«s.XTicks»" 
			 data-daysago="«s.daysago»" 
			 «IF s.class_ != null»class="«s.class_»"«ENDIF»></div>
	'''

	def compile(Div div) '''
		<div class="«div.class_»">
			«FOR w : div.widgets»
				«w.compile»
			«ENDFOR»
		</div>
	'''

	def compile(Custom custom) '''
		«custom.code»
	'''
	
	def comnpile(org.ckr.tabletUIDSL.Switch s)'''
		<div data-type="switch" data-device="«s.device»" «IF s.get != null»date-get="«s.get»"«ENDIF»" 
			«IF s.getOn != null»data-get-on="«s.getOn»"«ENDIF» «IF s.getOff != null»data-get-off="«s.getOff»"«ENDIF»
			«IF s.onColor != null»data-on-color="«s.onColor.rgb»"«ENDIF»
			«IF s.offColor != null»data-off-color="«s.offColor.rgb»"«ENDIF»
			«IF s.icon != null»data-icon="«s.icon»"«ENDIF»
			«IF s.backgroundIcon != null»data-background-icon="«s.backgroundIcon»"«ENDIF»>
		</div>
	'''

}
